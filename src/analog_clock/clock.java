/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analog_clock;

import com.alee.laf.WebLookAndFeel;
import java.awt.BasicStroke;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RadialGradientPaint;
import java.awt.RenderingHints;
import java.awt.geom.Line2D;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.UIManager;

/**
 *
 * @author Dilan Anuruddha
 */
public class clock extends javax.swing.JFrame {

    /**
     * Creates new form clock
     */
    public clock() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Run");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 316, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        drow();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(WebLookAndFeel.class.getCanonicalName());
            clock.setDefaultLookAndFeelDecorated(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new clock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    int x = 1;
    int y = 20;
    int angle = 0;

    private void drow() {

        Graphics2D g = (Graphics2D) jPanel1.getGraphics();

        Timer t = new java.util.Timer();
        t.schedule(new TimerTask() {
            @Override
            public void run() {
                jPanel1.update(g);
                g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g.setStroke(new BasicStroke(3));
                g.drawOval(52, 48, 300, 300);
                g.setStroke(new BasicStroke(1));
                for (int i = 1; i < 13; i++) {
                    g.drawString(i+"",(int)(200+ (135 * Math.cos(((i*5*6-90) * Math.PI / 180)))), (int) (204 + (135 * Math.sin(((i*5*6-90)* Math.PI / 180)))));
                }
                
                jLabel1.setText(LocalTime.now().toString());
                int scnd = LocalTime.now().getSecond() * 6 - 90;
                int mnt = LocalTime.now().getMinute() * 6 - 90;
                Double hour = 0.0;
                Double add_hour = Double.parseDouble(LocalTime.now().getMinute()+"");

                if (LocalTime.now().getHour() > 12) {
                    hour = ((LocalTime.now().getHour() - 12) * 30) + (add_hour / 2) - 90;
                } else {
                    hour = (LocalTime.now().getHour() * 30) + (add_hour / 2) - 90;
                }

                g.setColor(new Color(0, 0, 102));
                g.setStroke(new BasicStroke(2));
                //hour
                g.draw(new Line2D.Double(200, 200, 200 + (90 * Math.cos((hour * Math.PI / 180))), (200 + (90 * Math.sin((hour * Math.PI / 180))))));
                //mnt
                g.drawLine(200, 200, 200 + (int) (125 * Math.cos((mnt * Math.PI / 180))), (int) (200 + (125 * Math.sin((mnt * Math.PI / 180)))));
                //secnd
                g.setStroke(new BasicStroke(1));
                g.setColor(Color.red);
                g.drawLine(200, 200, 200 + (int) (145 * Math.cos((scnd * Math.PI / 180))), (int) (200 + (145 * Math.sin((scnd * Math.PI / 180)))));
            }
        }, 0, 1000);
        System.gc();

    }

}
